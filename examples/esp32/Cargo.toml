[package]
name = "trouble-esp32-examples"
version = "0.1.0"
edition = "2021"
license = "MIT OR Apache-2.0"

[dependencies]
embassy-executor = "0.9.0"
esp-bootloader-esp-idf = "0.2.0"
esp-backtrace = { version = "0.17.0", features = [ "panic-handler", "println" ] }
esp-hal = { version = "1.0.0-rc.0", features = [ "unstable" ] }
esp-hal-embassy = { version = "0.9.0" }
esp-alloc = { version = "0.8.0" }
esp-println = { version = "0.15.0", features = ["log-04"] }
esp-radio = { version = "0.15.0", features = [ "unstable", "ble" ] }
esp-preempt = { version = "0.0.1", features = ["log-04"] }
trouble-example-apps = { version = "0.1.0", path = "../apps", features = ["log"] }
trouble-host = { path = "../../host", features = ["default-packet-pool-mtu-255"] }
static_cell = "2"

[features]
default = ["esp32c3"]

esp32 = ["esp-hal/esp32", "esp-backtrace/esp32", "esp-hal-embassy/esp32", "esp-println/esp32", "esp-radio/esp32", "esp-preempt/esp32", "esp-bootloader-esp-idf/esp32"]
esp32c2 = ["esp-hal/esp32c2", "esp-backtrace/esp32c2", "esp-hal-embassy/esp32c2", "esp-println/esp32c2", "esp-preempt/esp32c2", "esp-radio/esp32c2", "esp-bootloader-esp-idf/esp32c2"]
esp32c3 = ["esp-hal/esp32c3", "esp-backtrace/esp32c3", "esp-hal-embassy/esp32c3", "esp-println/esp32c3", "esp-preempt/esp32c3", "esp-radio/esp32c3", "esp-bootloader-esp-idf/esp32c3"]
esp32c6 = ["esp-hal/esp32c6", "esp-backtrace/esp32c6", "esp-hal-embassy/esp32c6", "esp-println/esp32c6", "esp-preempt/esp32c6", "esp-radio/esp32c6", "esp-bootloader-esp-idf/esp32c6"]
esp32h2 = ["esp-hal/esp32h2", "esp-backtrace/esp32h2", "esp-hal-embassy/esp32h2", "esp-println/esp32h2", "esp-preempt/esp32h2", "esp-radio/esp32h2", "esp-bootloader-esp-idf/esp32h2"]
esp32s3 = ["esp-hal/esp32s3", "esp-backtrace/esp32s3", "esp-hal-embassy/esp32s3", "esp-println/esp32s3", "esp-preempt/esp32s3", "esp-radio/esp32s3", "esp-bootloader-esp-idf/esp32s3"]

security = [
    "trouble-example-apps/security",
]

[profile.dev]
# Rust debug is too slow.
# For debug builds always builds with some optimization
opt-level = "s"

[profile.release]
codegen-units = 1 # LLVM can perform better optimizations using a single thread
debug = 2
debug-assertions = false
incremental = false
lto = 'thin'
opt-level = 3
overflow-checks = false

[[bin]]
name = "ble_bas_central_sec"
required-features = ["security"]

[[bin]]
name = "ble_bas_peripheral_sec"
required-features = ["security"]

[patch.crates-io]
esp-radio = {git = "https://github.com/bugadani/esp-hal.git", branch = "embassy-fun"}
esp-preempt = {git = "https://github.com/bugadani/esp-hal.git", branch = "embassy-fun"}
esp-backtrace = {git = "https://github.com/bugadani/esp-hal.git", branch = "embassy-fun"}
esp-hal = {git = "https://github.com/bugadani/esp-hal.git", branch = "embassy-fun"}
esp-bootloader-esp-idf = {git = "https://github.com/bugadani/esp-hal.git", branch = "embassy-fun"}
esp-hal-embassy = {git = "https://github.com/bugadani/esp-hal.git", branch = "embassy-fun"}
esp-alloc = {git = "https://github.com/bugadani/esp-hal.git", branch = "embassy-fun"}
esp-println = {git = "https://github.com/bugadani/esp-hal.git", branch = "embassy-fun"}

#esp-backtrace = { path = "../../../esp-hal/esp-backtrace" }
#esp-bootloader-esp-idf = { path = "../../../esp-hal/esp-bootloader-esp-idf" }
#esp-hal = { path = "../../../esp-hal/esp-hal" }
#esp-hal-embassy = { path = "../../../esp-hal/esp-hal-embassy" }
#esp-alloc = { path = "../../../esp-hal/esp-alloc" }
#esp-println = { path = "../../../esp-hal/esp-println" }
#esp-radio = { path = "../../../esp-hal/esp-radio" }
#esp-preempt = { path = "../../../esp-hal/esp-preempt" }
